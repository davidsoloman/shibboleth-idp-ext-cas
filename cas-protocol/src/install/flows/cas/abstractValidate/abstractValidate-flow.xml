<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
  ~ Licensed to the University Corporation for Advanced Internet Development,
  ~ Inc. (UCAID) under one or more contributor license agreements.  See the
  ~ NOTICE file distributed with this work for additional information regarding
  ~ copyright ownership. The UCAID licenses this file to You under the Apache
  ~ License, Version 2.0 (the "License"); you may not use this file except in
  ~ compliance with the License.  You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="
          http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
      abstract="true">

    <action-state id="initializeValidate">
        <evaluate expression="initProfileRequestContext"/>
        <evaluate expression="initializeValidateAction" />
        <transition on="serviceNotSpecified" to="serviceValidateFailure" />
        <transition on="ticketNotSpecified" to="serviceValidateFailure" />
        <transition on="proceed" to="validateTicket" />
    </action-state>

    <action-state id="validateTicket">
        <evaluate expression="validateTicketAction" />
        <transition on="invalidTicketFormat" to="serviceValidateFailure" />
        <transition on="serviceMismatch" to="serviceValidateFailure" />
        <transition on="ticketExpired" to="serviceValidateFailure" />
        <transition on="ticketRetrievalError" to="serviceValidateFailure" />
        <transition on="serviceTicketValidated" to="validateIdPSession" />
        <transition on="proxyTicketValidated" to="handleValidProxyTicket" />
    </action-state>

    <action-state id="validateIdPSession">
        <evaluate expression="validateIdPSessionAction" />
        <transition on="sessionRetrievalError" to="serviceValidateFailure" />
        <transition on="sessionExpired" to="serviceValidateFailure" />
        <transition on="success" to="validateRenew" />
    </action-state>

    <action-state id="validateRenew">
        <evaluate expression="validateRenewAction" />
        <transition on="ticketNotFromRenew" to="serviceValidateFailure" />
        <transition on="renewIncompatibleWithProxy" to="serviceValidateFailure" />
        <transition on="success" to="checkForProxy" />
    </action-state>

    <decision-state id="checkForProxy">
        <if test="requestScope.ticketValidationRequest.pgtUrl != null"
            then="validateProxyCallback"
            else="serviceValidateSuccess"/>
    </decision-state>

    <action-state id="validateProxyCallback">
        <evaluate expression="validateProxyCallbackAction" />
        <transition on="success" to="serviceValidateSuccess" />
        <transition on="failure" to="serviceValidateSuccess" />
    </action-state>

    <!-- View end states -->
    <end-state id="serviceValidateSuccess" view="cas/serviceValidateSuccess">
        <on-entry>
            <evaluate expression="requestScope.ticketValidationResponse.setUserName(requestScope.idpSession.principalName)" />
            <set name="flashScope.userName" value="requestScope.ticketValidationResponse.userName" />
            <set name="flashScope.attributes" value="requestScope.ticketValidationResponse.attributes" />
            <set name="flashScope.pgtIou" value="requestScope.ticketValidationResponse.pgtIou" />
            <set name="flashScope.proxies" value="requestScope.ticketValidationResponse.proxies" />
            <set name="flashScope.escapeUtils" value="T(org.apache.commons.lang.StringEscapeUtils)" />
        </on-entry>
    </end-state>
    <end-state id="serviceValidateFailure" view="cas/serviceValidateFailure">
        <on-entry>
            <set name="flashScope.code" value="currentEvent.attributes.code" />
            <set name="flashScope.detailCode" value="currentEvent.attributes.detailCode" />
        </on-entry>
    </end-state>

</flow>